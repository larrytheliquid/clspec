(in-package :clspec)

(defmacro with-stubs (&body body)
  `(let* ((stubbed-functions (make-hash-table))
	 (result (progn ,@body)))
     (maphash (lambda (key value)
		(setf (symbol-function key)
		      value))
	      stubbed-functions)
     result))

(defmacro stub (function-name returns)
  `(progn (setf (gethash ',function-name stubbed-functions)
		(symbol-function ',function-name))
	  (setf (symbol-function ',function-name)
		(let ((returns ',returns))
		  (pop returns)
		  (lambda (&rest unlimited-args)
		    (if (eql (length returns) 1)
			(first returns)
			(pop returns)))))))